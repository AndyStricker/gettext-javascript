#!/bin/sh

# Test of Javascript support.
# Playing with concatenation of string literals withing the gettext function

tmpfiles=""
trap 'rm -fr $tmpfiles' 1 2 3 15

tmpfiles="$tmpfiles xg-js-2.js"
cat <<\EOF > xg-js-2.js
// The usual way to concatenate strings is the plus '+' sign
var s = _("This" + " whole " 
          + "string" +
         'should' + " be " + 'extracted');
EOF

tmpfiles="$tmpfiles xg-js-2.err xg-js-2.tmp xg-js-2.pot"
: ${XGETTEXT=xgettext}
${XGETTEXT} --add-comments --no-location -o xg-js-2.tmp xg-js-2.js 2>xg-js-2.err
test $? = 0 || { cat xg-js-2.err; rm -fr $tmpfiles; exit 1; }
# Don't simplify this to "grep ... < xg-js-2.tmp", otherwise OpenBSD 4.0 grep
# only outputs "Binary file (standard input) matches".
cat xg-js-2.tmp | grep -v 'POT-Creation-Date' | LC_ALL=C tr -d '\r' > xg-js-2.pot

tmpfiles="$tmpfiles xg-js-2.ok"
cat <<\EOF > xg-js-2.ok
# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Extract this first string"
msgstr ""

msgid "Extract this second string"
msgstr ""

msgid "Extract this thirth string"
msgstr ""
EOF

: ${DIFF=diff}
${DIFF} xg-js-2.ok xg-js-2.pot
result=$?

rm -fr $tmpfiles

exit $result
